# R Management

## R基本操作

### 快捷命令

+-----------------------------+-----------------------------------------------------------+
| Alt + Shift + K             | 显示Rstudio所有快捷命令                                   |
+-----------------------------+-----------------------------------------------------------+
| Alt + -                     | 输入等于号 \<-                                            |
+-----------------------------+-----------------------------------------------------------+
| Ctrl + Shift + M            | 输入通道符 %\>%                                           |
+-----------------------------+-----------------------------------------------------------+
| 占位符 .                    | mtcars %\>% select(cyl) %\>% colMeans() %\>% rep(1,.)     |
+-----------------------------+-----------------------------------------------------------+
| help(package="graphics")    | 查看某个package的帮助文档                                 |
+-----------------------------+-----------------------------------------------------------+
| ?mean                       | 查看某个函数的帮助文档                                    |
+-----------------------------+-----------------------------------------------------------+
| update.packages()           | 更新所有package                                           |
+-----------------------------+-----------------------------------------------------------+
| remove.packages("openxlsx") | 删除某个package                                           |
+-----------------------------+-----------------------------------------------------------+
| methods(plot)               | 查看某个系列（子函数）的函数的使用场景                    |
+-----------------------------+-----------------------------------------------------------+
| traceback()                 | debug函数                                                 |
|                             |                                                           |
| browser()                   |                                                           |
|                             |                                                           |
| debugone()/debug()          |                                                           |
+-----------------------------+-----------------------------------------------------------+
| rm(list = ls())             | 清空当前环境                                              |
+-----------------------------+-----------------------------------------------------------+
| setwd(dir = "D:/XXXX/XX")   | 设置目录，需要注意R中目录路径需要使用正斜线/,而不是反斜线 |
+-----------------------------+-----------------------------------------------------------+
| getwd()                     | 查看当前工作目录路径GitHub代码托管                        |
+-----------------------------+-----------------------------------------------------------+

## 本地代码托管至GitHub

已安装Git软件（可参考[手把手教你用git上传项目到GitHub](https://zhuanlan.zhihu.com/p/193140870)），在需要托管的本地代码的目录右键单击 Open Git Bash here，并将该目录变成Git可以管理的仓库。

``` r
git init
```

目录下会出现.git（隐藏）文件夹，然后将所有文件添加到仓库。

``` r
git add .
```

然后将文件提交至仓库，并填写注释。

``` r
git commit -m "comments"
```

复制GitHub上SSH公钥，与之进行链接。

``` r
git remote add origin git@github.com:AQ-Life/R-Programming.git
```

上传本地代码。

``` r
git push -u origin master
```

对更新的book或website进行publish（发布）操作，在R studio Terminal窗口：

``` r
quarto publish gh-pages
```

+--------------------------------------------+
|                                            |
+--------------------------------------------+

## R package 开发

R Package开发参考R文档操作指南：

[Writing R Extensions](https://cran.r-project.org/doc/manuals/R-exts.html)

### 新建项目

File –\> New Project –\> New Directory –\> R Package –\> type Package name –\> select project root path – \> Create Project

### 添加（多个）自定义函数与注释

``` r
xxx <- function(xx1, xx2){
  ...
}
```

选中函数名（xxx），Ctrl+Shift+Alt+R 快捷键添加自定义函数的头部注释，如下：

``` r
#' Title
#'
#' @param xx1
#' @param xx2
#'
#' @return
#' @export
#'
#' @examples
xxx <- function(xx1, xx2){
  ...
}
```

### 生成/man和NAMESPACE文档

``` r
library(devtools)

devtools::document()
devtools::load_all()
```

### 测试函数

``` r
myfunction1(xx1)
myfunction2(xx2)
```

### 更新DESCRIPTION

### 构建R Package并检查

``` r
devtools::build()
devtools::check()
```

### 创建readme文档

``` r
use_readme_rmd() #创建.rmd文档
build_readme() #文档创建之后创建.md文档
```

### 上传R Package 到GitHub

1.  为新建的R Package 创建新的仓库后，并git上传代码到GitHub

2.  从GitHub上安装刚开发的R Package

    ``` r
    devtools::install_github("XXXX/xxxx")
    ```

3.  应用R Package

    ``` r
    library(xxxx)
    ```
